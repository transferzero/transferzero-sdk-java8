/*
 * TransferZero API
 * Reference documentation for the TransferZero API V1
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.transferzero.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * Account
 */

public class Account {
  public static final String SERIALIZED_NAME_AMOUNT = "amount";
  @SerializedName(SERIALIZED_NAME_AMOUNT)
  private BigDecimal amount;

  public static final String SERIALIZED_NAME_CURRENCY = "currency";
  @SerializedName(SERIALIZED_NAME_CURRENCY)
  private String currency;

  public static final String SERIALIZED_NAME_AMOUNT_AFTER_PENDING = "amount_after_pending";
  @SerializedName(SERIALIZED_NAME_AMOUNT_AFTER_PENDING)
  private BigDecimal amountAfterPending;

   /**
   * The account balance for the given currency
   * @return amount
  **/
  @ApiModelProperty(example = "1000.0", value = "The account balance for the given currency")
  public BigDecimal getAmount() {
    return amount;
  }

   /**
   * The currency of this balance
   * @return currency
  **/
  @ApiModelProperty(example = "USD", value = "The currency of this balance")
  public String getCurrency() {
    return currency;
  }

   /**
   * Represents the account balance after deducting pending transactions from the last 7 days. It provides a more accurate depiction of available funds.
   * @return amountAfterPending
  **/
  @ApiModelProperty(example = "1000.0", value = "Represents the account balance after deducting pending transactions from the last 7 days. It provides a more accurate depiction of available funds.")
  public BigDecimal getAmountAfterPending() {
    return amountAfterPending;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Account account = (Account) o;
    return Objects.equals(this.amount, account.amount) &&
        Objects.equals(this.currency, account.currency) &&
        Objects.equals(this.amountAfterPending, account.amountAfterPending);
  }

  @Override
  public int hashCode() {
    return Objects.hash(amount, currency, amountAfterPending);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Account {\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    amountAfterPending: ").append(toIndentedString(amountAfterPending)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

