/*
 * BitPesa Private API
 * API specification used for internal BitPesa endpoints
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.transferzero.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.UUID;

/**
 * Active Bank Account Details for specified currency.  Business BankAccountDetails Example: &#x60;&#x60;&#x60;json   {     \&quot;id\&quot;:\&quot;ebe9bc0b-f2f6-4ce8-802a-8b79912d041e\&quot;,     \&quot;payin_ccy\&quot;:\&quot;NGN\&quot;,     \&quot;account_name\&quot;:\&quot;NGN Details\&quot;,     \&quot;address\&quot;:\&quot;Test Plot no. Jane Doe Road\&quot;,     \&quot;bank_name\&quot;:\&quot;Standard Test Limited\&quot;,     \&quot;bank_address\&quot;:\&quot;4 Lorem Avenue PO BOX 1022222.\&quot;,     \&quot;iban\&quot;:nil,     \&quot;bic_or_swift\&quot;:nil,     \&quot;sort_code\&quot;:nil,     \&quot;account_number\&quot;:nil,     \&quot;branch_name\&quot;:\&quot;branch_name\&quot;,     \&quot;branch_number\&quot;:nil,     \&quot;branch_code\&quot;:nil,     \&quot;reference\&quot;:nil,     \&quot;status\&quot;:\&quot;unavailable\&quot;,     \&quot;unavailable_message\&quot;:\&quot;Experiencing downtime issues\&quot;   } &#x60;&#x60;&#x60;
 */
@ApiModel(description = "Active Bank Account Details for specified currency.  Business BankAccountDetails Example: ```json   {     \"id\":\"ebe9bc0b-f2f6-4ce8-802a-8b79912d041e\",     \"payin_ccy\":\"NGN\",     \"account_name\":\"NGN Details\",     \"address\":\"Test Plot no. Jane Doe Road\",     \"bank_name\":\"Standard Test Limited\",     \"bank_address\":\"4 Lorem Avenue PO BOX 1022222.\",     \"iban\":nil,     \"bic_or_swift\":nil,     \"sort_code\":nil,     \"account_number\":nil,     \"branch_name\":\"branch_name\",     \"branch_number\":nil,     \"branch_code\":nil,     \"reference\":nil,     \"status\":\"unavailable\",     \"unavailable_message\":\"Experiencing downtime issues\"   } ```")

public class BankAccountDetails {
  public static final String SERIALIZED_NAME_PAYIN_CCY = "payin_ccy";
  @SerializedName(SERIALIZED_NAME_PAYIN_CCY)
  private String payinCcy;

  public static final String SERIALIZED_NAME_ACCOUNT_NAME = "account_name";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_NAME)
  private String accountName;

  public static final String SERIALIZED_NAME_ADDRESS = "address";
  @SerializedName(SERIALIZED_NAME_ADDRESS)
  private String address;

  public static final String SERIALIZED_NAME_BANK_NAME = "bank_name";
  @SerializedName(SERIALIZED_NAME_BANK_NAME)
  private String bankName;

  public static final String SERIALIZED_NAME_BANK_ADDRESS = "bank_address";
  @SerializedName(SERIALIZED_NAME_BANK_ADDRESS)
  private String bankAddress;

  public static final String SERIALIZED_NAME_IBAN = "iban";
  @SerializedName(SERIALIZED_NAME_IBAN)
  private String iban;

  public static final String SERIALIZED_NAME_BIC_OR_SWIFT = "bic_or_swift";
  @SerializedName(SERIALIZED_NAME_BIC_OR_SWIFT)
  private String bicOrSwift;

  public static final String SERIALIZED_NAME_SORT_CODE = "sort_code";
  @SerializedName(SERIALIZED_NAME_SORT_CODE)
  private String sortCode;

  public static final String SERIALIZED_NAME_ACCOUNT_NUMBER = "account_number";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_NUMBER)
  private String accountNumber;

  public static final String SERIALIZED_NAME_BRANCH_NAME = "branch_name";
  @SerializedName(SERIALIZED_NAME_BRANCH_NAME)
  private String branchName;

  public static final String SERIALIZED_NAME_BRANCH_CODE = "branch_code";
  @SerializedName(SERIALIZED_NAME_BRANCH_CODE)
  private String branchCode;

  public static final String SERIALIZED_NAME_REFERENCE = "reference";
  @SerializedName(SERIALIZED_NAME_REFERENCE)
  private String reference;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_UNAVAILABLE_MESSAGE = "unavailable_message";
  @SerializedName(SERIALIZED_NAME_UNAVAILABLE_MESSAGE)
  private String unavailableMessage;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private UUID id;

  public BankAccountDetails payinCcy(String payinCcy) {
    this.payinCcy = payinCcy;
    return this;
  }

   /**
   * The currency for the bank account details
   * @return payinCcy
  **/
  @ApiModelProperty(example = "NGN", value = "The currency for the bank account details")
  public String getPayinCcy() {
    return payinCcy;
  }

  public void setPayinCcy(String payinCcy) {
    this.payinCcy = payinCcy;
  }

  public BankAccountDetails accountName(String accountName) {
    this.accountName = accountName;
    return this;
  }

   /**
   * The business account name
   * @return accountName
  **/
  @ApiModelProperty(example = "Jane Doe Limited", value = "The business account name")
  public String getAccountName() {
    return accountName;
  }

  public void setAccountName(String accountName) {
    this.accountName = accountName;
  }

  public BankAccountDetails address(String address) {
    this.address = address;
    return this;
  }

   /**
   * The business address
   * @return address
  **/
  @ApiModelProperty(example = "798 John Owens, Street PO 1234", value = "The business address")
  public String getAddress() {
    return address;
  }

  public void setAddress(String address) {
    this.address = address;
  }

  public BankAccountDetails bankName(String bankName) {
    this.bankName = bankName;
    return this;
  }

   /**
   * The name of the bank as registered with Central Bank of the country.
   * @return bankName
  **/
  @ApiModelProperty(example = "Stanbic International Bank", value = "The name of the bank as registered with Central Bank of the country.")
  public String getBankName() {
    return bankName;
  }

  public void setBankName(String bankName) {
    this.bankName = bankName;
  }

  public BankAccountDetails bankAddress(String bankAddress) {
    this.bankAddress = bankAddress;
    return this;
  }

   /**
   * The address of the bank
   * @return bankAddress
  **/
  @ApiModelProperty(example = "798 Stanbic Street, PO 1234", value = "The address of the bank")
  public String getBankAddress() {
    return bankAddress;
  }

  public void setBankAddress(String bankAddress) {
    this.bankAddress = bankAddress;
  }

  public BankAccountDetails iban(String iban) {
    this.iban = iban;
    return this;
  }

   /**
   * An internationally agreed system of identifying bank accounts across national borders
   * @return iban
  **/
  @ApiModelProperty(example = "AL35202111090000000001234567", value = "An internationally agreed system of identifying bank accounts across national borders")
  public String getIban() {
    return iban;
  }

  public void setIban(String iban) {
    this.iban = iban;
  }

  public BankAccountDetails bicOrSwift(String bicOrSwift) {
    this.bicOrSwift = bicOrSwift;
    return this;
  }

   /**
   * Bank Identifier Code
   * @return bicOrSwift
  **/
  @ApiModelProperty(example = "AAAABBCCDDD", value = "Bank Identifier Code")
  public String getBicOrSwift() {
    return bicOrSwift;
  }

  public void setBicOrSwift(String bicOrSwift) {
    this.bicOrSwift = bicOrSwift;
  }

  public BankAccountDetails sortCode(String sortCode) {
    this.sortCode = sortCode;
    return this;
  }

   /**
   * Domestic bank codes used to route money transfers between financial institutions in the United Kingdom/Ireland.
   * @return sortCode
  **/
  @ApiModelProperty(example = "12-34-56", value = "Domestic bank codes used to route money transfers between financial institutions in the United Kingdom/Ireland.")
  public String getSortCode() {
    return sortCode;
  }

  public void setSortCode(String sortCode) {
    this.sortCode = sortCode;
  }

  public BankAccountDetails accountNumber(String accountNumber) {
    this.accountNumber = accountNumber;
    return this;
  }

   /**
   * A unique string of numbers and, sometimes, letters and other characters that identifies the owner of an account.
   * @return accountNumber
  **/
  @ApiModelProperty(example = "AB123456", value = "A unique string of numbers and, sometimes, letters and other characters that identifies the owner of an account.")
  public String getAccountNumber() {
    return accountNumber;
  }

  public void setAccountNumber(String accountNumber) {
    this.accountNumber = accountNumber;
  }

  public BankAccountDetails branchName(String branchName) {
    this.branchName = branchName;
    return this;
  }

   /**
   * The name of the branch of the bank
   * @return branchName
  **/
  @ApiModelProperty(example = "STANBIC BANK", value = "The name of the branch of the bank")
  public String getBranchName() {
    return branchName;
  }

  public void setBranchName(String branchName) {
    this.branchName = branchName;
  }

  public BankAccountDetails branchCode(String branchCode) {
    this.branchCode = branchCode;
    return this;
  }

   /**
   * Unique identifying code for a given branch of a bank
   * @return branchCode
  **/
  @ApiModelProperty(example = "99922", value = "Unique identifying code for a given branch of a bank")
  public String getBranchCode() {
    return branchCode;
  }

  public void setBranchCode(String branchCode) {
    this.branchCode = branchCode;
  }

  public BankAccountDetails reference(String reference) {
    this.reference = reference;
    return this;
  }

   /**
   * A statement from the bank regarding the bank details.
   * @return reference
  **/
  @ApiModelProperty(example = "The bank requires the following reference details", value = "A statement from the bank regarding the bank details.")
  public String getReference() {
    return reference;
  }

  public void setReference(String reference) {
    this.reference = reference;
  }

  public BankAccountDetails status(String status) {
    this.status = status;
    return this;
  }

   /**
   * One of available, unavailable, hidden
   * @return status
  **/
  @ApiModelProperty(example = "available", value = "One of available, unavailable, hidden")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public BankAccountDetails unavailableMessage(String unavailableMessage) {
    this.unavailableMessage = unavailableMessage;
    return this;
  }

   /**
   * Reason for setting the bank status to unavailable
   * @return unavailableMessage
  **/
  @ApiModelProperty(example = "Experiencing downtime issues", value = "Reason for setting the bank status to unavailable")
  public String getUnavailableMessage() {
    return unavailableMessage;
  }

  public void setUnavailableMessage(String unavailableMessage) {
    this.unavailableMessage = unavailableMessage;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(example = "ebe9bc0b-f2f6-4ce8-802a-8b79912d041e", value = "")
  public UUID getId() {
    return id;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BankAccountDetails bankAccountDetails = (BankAccountDetails) o;
    return Objects.equals(this.payinCcy, bankAccountDetails.payinCcy) &&
        Objects.equals(this.accountName, bankAccountDetails.accountName) &&
        Objects.equals(this.address, bankAccountDetails.address) &&
        Objects.equals(this.bankName, bankAccountDetails.bankName) &&
        Objects.equals(this.bankAddress, bankAccountDetails.bankAddress) &&
        Objects.equals(this.iban, bankAccountDetails.iban) &&
        Objects.equals(this.bicOrSwift, bankAccountDetails.bicOrSwift) &&
        Objects.equals(this.sortCode, bankAccountDetails.sortCode) &&
        Objects.equals(this.accountNumber, bankAccountDetails.accountNumber) &&
        Objects.equals(this.branchName, bankAccountDetails.branchName) &&
        Objects.equals(this.branchCode, bankAccountDetails.branchCode) &&
        Objects.equals(this.reference, bankAccountDetails.reference) &&
        Objects.equals(this.status, bankAccountDetails.status) &&
        Objects.equals(this.unavailableMessage, bankAccountDetails.unavailableMessage) &&
        Objects.equals(this.id, bankAccountDetails.id);
  }

  @Override
  public int hashCode() {
    return Objects.hash(payinCcy, accountName, address, bankName, bankAddress, iban, bicOrSwift, sortCode, accountNumber, branchName, branchCode, reference, status, unavailableMessage, id);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BankAccountDetails {\n");
    sb.append("    payinCcy: ").append(toIndentedString(payinCcy)).append("\n");
    sb.append("    accountName: ").append(toIndentedString(accountName)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    bankName: ").append(toIndentedString(bankName)).append("\n");
    sb.append("    bankAddress: ").append(toIndentedString(bankAddress)).append("\n");
    sb.append("    iban: ").append(toIndentedString(iban)).append("\n");
    sb.append("    bicOrSwift: ").append(toIndentedString(bicOrSwift)).append("\n");
    sb.append("    sortCode: ").append(toIndentedString(sortCode)).append("\n");
    sb.append("    accountNumber: ").append(toIndentedString(accountNumber)).append("\n");
    sb.append("    branchName: ").append(toIndentedString(branchName)).append("\n");
    sb.append("    branchCode: ").append(toIndentedString(branchCode)).append("\n");
    sb.append("    reference: ").append(toIndentedString(reference)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    unavailableMessage: ").append(toIndentedString(unavailableMessage)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

