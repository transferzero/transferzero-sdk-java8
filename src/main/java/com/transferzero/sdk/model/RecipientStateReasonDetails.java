/*
 * TransferZero API
 * Reference documentation for the TransferZero API V1
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.transferzero.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.transferzero.sdk.model.StateReasonDetails;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * RecipientStateReasonDetails
 */

public class RecipientStateReasonDetails {
  public static final String SERIALIZED_NAME_CODE = "code";
  @SerializedName(SERIALIZED_NAME_CODE)
  private String code;

  public static final String SERIALIZED_NAME_CATEGORY = "category";
  @SerializedName(SERIALIZED_NAME_CATEGORY)
  private String category;

  public static final String SERIALIZED_NAME_MESSAGES = "messages";
  @SerializedName(SERIALIZED_NAME_MESSAGES)
  private List<String> messages = new ArrayList<>();

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

   /**
   * Status code of transaction
   * @return code
  **/
  @ApiModelProperty(example = "311", value = "Status code of transaction")
  public String getCode() {
    return code;
  }

   /**
   * Main category of status code, it could be paid, unknown, pickupable, temporary_error, recipient_error, sender_error, sender_action_required
   * @return category
  **/
  @ApiModelProperty(example = "temporary_error", value = "Main category of status code, it could be paid, unknown, pickupable, temporary_error, recipient_error, sender_error, sender_action_required")
  public String getCategory() {
    return category;
  }

   /**
   * Tiered messages
   * @return messages
  **/
  @ApiModelProperty(example = "[\"Temporary error\",\"Switch Error\",\"Issuer/Switch inoperative\"]", value = "Tiered messages")
  public List<String> getMessages() {
    return messages;
  }

   /**
   * Public, human readable, detailed error message
   * @return description
  **/
  @ApiModelProperty(example = "The central switch is not accepting transactions at the moment. We will retry the transaction", value = "Public, human readable, detailed error message")
  public String getDescription() {
    return description;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RecipientStateReasonDetails recipientStateReasonDetails = (RecipientStateReasonDetails) o;
    return Objects.equals(this.code, recipientStateReasonDetails.code) &&
        Objects.equals(this.category, recipientStateReasonDetails.category) &&
        Objects.equals(this.messages, recipientStateReasonDetails.messages) &&
        Objects.equals(this.description, recipientStateReasonDetails.description);
  }

  @Override
  public int hashCode() {
    return Objects.hash(code, category, messages, description);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RecipientStateReasonDetails {\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    messages: ").append(toIndentedString(messages)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

