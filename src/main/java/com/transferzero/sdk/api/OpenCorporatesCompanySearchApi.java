/*
 * BitPesa Private API
 * API specification used for internal BitPesa endpoints
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.transferzero.sdk.api;

import com.transferzero.sdk.ApiCallback;
import com.transferzero.sdk.ApiClient;
import com.transferzero.sdk.ApiException;
import com.transferzero.sdk.ApiResponse;
import com.transferzero.sdk.Configuration;
import com.transferzero.sdk.Pair;
import com.transferzero.sdk.ProgressRequestBody;
import com.transferzero.sdk.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import com.transferzero.sdk.model.OpenCorporatesSearchRequest;
import com.transferzero.sdk.model.OpenCorporatesSearchResponse;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class OpenCorporatesCompanySearchApi {
    private ApiClient localVarApiClient;

    public OpenCorporatesCompanySearchApi() {
        this(Configuration.getDefaultApiClient());
    }

    public OpenCorporatesCompanySearchApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    /**
     * Build call for searchCompany
     * @param openCorporatesSearchRequest  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public okhttp3.Call searchCompanyCall(OpenCorporatesSearchRequest openCorporatesSearchRequest, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = openCorporatesSearchRequest;

        // create path and map variables
        String localVarPath = "/open_corporates/search";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "AuthorizationKey", "AuthorizationNonce", "AuthorizationSecret", "AuthorizationSignature" };
        return localVarApiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call searchCompanyValidateBeforeCall(OpenCorporatesSearchRequest openCorporatesSearchRequest, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'openCorporatesSearchRequest' is set
        if (openCorporatesSearchRequest == null) {
            throw new ApiException("Missing the required parameter 'openCorporatesSearchRequest' when calling searchCompany(Async)");
        }
        

        okhttp3.Call localVarCall = searchCompanyCall(openCorporatesSearchRequest, _callback);
        return localVarCall;

    }

    /**
     * Search for a company on Open Corporates
     * This endpoint searches for a company on Open Corporates API and returns the name if found
     * @param openCorporatesSearchRequest  (required)
     * @return OpenCorporatesSearchResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public OpenCorporatesSearchResponse searchCompany(OpenCorporatesSearchRequest openCorporatesSearchRequest) throws ApiException {
        ApiResponse<OpenCorporatesSearchResponse> localVarResp = searchCompanyWithHttpInfo(openCorporatesSearchRequest);
        return localVarResp.getData();
    }

    /**
     * Search for a company on Open Corporates
     * This endpoint searches for a company on Open Corporates API and returns the name if found
     * @param openCorporatesSearchRequest  (required)
     * @return ApiResponse&lt;OpenCorporatesSearchResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<OpenCorporatesSearchResponse> searchCompanyWithHttpInfo(OpenCorporatesSearchRequest openCorporatesSearchRequest) throws ApiException {
        okhttp3.Call localVarCall = searchCompanyValidateBeforeCall(openCorporatesSearchRequest, null);
        Type localVarReturnType = new TypeToken<OpenCorporatesSearchResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Search for a company on Open Corporates (asynchronously)
     * This endpoint searches for a company on Open Corporates API and returns the name if found
     * @param openCorporatesSearchRequest  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public okhttp3.Call searchCompanyAsync(OpenCorporatesSearchRequest openCorporatesSearchRequest, final ApiCallback<OpenCorporatesSearchResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = searchCompanyValidateBeforeCall(openCorporatesSearchRequest, _callback);
        Type localVarReturnType = new TypeToken<OpenCorporatesSearchResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
