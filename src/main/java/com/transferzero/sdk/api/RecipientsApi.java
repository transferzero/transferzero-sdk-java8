/*
 * TransferZero API
 * Reference documentation for the TransferZero API V1
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.transferzero.sdk.api;

import com.transferzero.sdk.ApiCallback;
import com.transferzero.sdk.ApiClient;
import com.transferzero.sdk.ApiException;
import com.transferzero.sdk.ApiResponse;
import com.transferzero.sdk.Configuration;
import com.transferzero.sdk.Pair;
import com.transferzero.sdk.ProgressRequestBody;
import com.transferzero.sdk.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import com.transferzero.sdk.model.RecipientListResponse;
import com.transferzero.sdk.model.RecipientRequest;
import com.transferzero.sdk.model.RecipientResponse;
import java.util.UUID;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class RecipientsApi {
    private ApiClient localVarApiClient;

    public RecipientsApi() {
        this(Configuration.getDefaultApiClient());
    }

    public RecipientsApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    /**
     * Build call for deleteRecipient
     * @param recipientID ID of recipient to cancel.  Example: &#x60;/v1/recipients/9d4d7b73-a94c-4979-ab57-09074fd55d33&#x60; (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * More details on cancelling recipients
     * @see <a href="https://github.com/transferzero/api-documentation/blob/master/transaction-flow.md#cancelling-recipients-and-transactions">Cancelling a recipient Documentation</a>
     */
    public okhttp3.Call deleteRecipientCall(UUID recipientID, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = new Object();

        // create path and map variables
        String localVarPath = "/recipients/{Recipient ID}"
            .replaceAll("\\{" + "Recipient ID" + "\\}", localVarApiClient.escapeString(recipientID.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "AuthorizationKey", "AuthorizationNonce", "AuthorizationSecret", "AuthorizationSignature" };
        return localVarApiClient.buildCall(localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call deleteRecipientValidateBeforeCall(UUID recipientID, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'recipientID' is set
        if (recipientID == null) {
            throw new ApiException("Missing the required parameter 'recipientID' when calling deleteRecipient(Async)");
        }
        

        okhttp3.Call localVarCall = deleteRecipientCall(recipientID, _callback);
        return localVarCall;

    }

    /**
     * Cancelling a recipient
     * Cancels the payment to the recipient specified in the URL path.  Please note only recipients where the &#x60;may_cancel&#x60; attribute is true can be cancelled.
     * @param recipientID ID of recipient to cancel.  Example: &#x60;/v1/recipients/9d4d7b73-a94c-4979-ab57-09074fd55d33&#x60; (required)
     * @return RecipientResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * More details on cancelling recipients
     * @see <a href="https://github.com/transferzero/api-documentation/blob/master/transaction-flow.md#cancelling-recipients-and-transactions">Cancelling a recipient Documentation</a>
     */
    public RecipientResponse deleteRecipient(UUID recipientID) throws ApiException {
        ApiResponse<RecipientResponse> localVarResp = deleteRecipientWithHttpInfo(recipientID);
        return localVarResp.getData();
    }

    /**
     * Cancelling a recipient
     * Cancels the payment to the recipient specified in the URL path.  Please note only recipients where the &#x60;may_cancel&#x60; attribute is true can be cancelled.
     * @param recipientID ID of recipient to cancel.  Example: &#x60;/v1/recipients/9d4d7b73-a94c-4979-ab57-09074fd55d33&#x60; (required)
     * @return ApiResponse&lt;RecipientResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * More details on cancelling recipients
     * @see <a href="https://github.com/transferzero/api-documentation/blob/master/transaction-flow.md#cancelling-recipients-and-transactions">Cancelling a recipient Documentation</a>
     */
    public ApiResponse<RecipientResponse> deleteRecipientWithHttpInfo(UUID recipientID) throws ApiException {
        okhttp3.Call localVarCall = deleteRecipientValidateBeforeCall(recipientID, null);
        Type localVarReturnType = new TypeToken<RecipientResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Cancelling a recipient (asynchronously)
     * Cancels the payment to the recipient specified in the URL path.  Please note only recipients where the &#x60;may_cancel&#x60; attribute is true can be cancelled.
     * @param recipientID ID of recipient to cancel.  Example: &#x60;/v1/recipients/9d4d7b73-a94c-4979-ab57-09074fd55d33&#x60; (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * More details on cancelling recipients
     * @see <a href="https://github.com/transferzero/api-documentation/blob/master/transaction-flow.md#cancelling-recipients-and-transactions">Cancelling a recipient Documentation</a>
     */
    public okhttp3.Call deleteRecipientAsync(UUID recipientID, final ApiCallback<RecipientResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = deleteRecipientValidateBeforeCall(recipientID, _callback);
        Type localVarReturnType = new TypeToken<RecipientResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getRecipients
     * @param page The page number to request (defaults to 1) (optional)
     * @param per The number of results to load per page (defaults to 10) (optional)
     * @param createdAtFrom Start date to filter recipients by created_at range Allows filtering results by the specified &#x60;created_at&#x60; timeframe.  Example: &#x60;/v1/recipients?created_at_from&#x3D;2018-06-06&amp;created_at_to&#x3D;2018-06-08&#x60; (optional)
     * @param createdAtTo End date to filter recipients by created_at range Allows filtering results by the specified &#x60;created_at&#x60; timeframe.  Example: &#x60;/v1/recipients?created_at_from&#x3D;2018-06-06&amp;created_at_to&#x3D;2018-06-08&#x60; (optional)
     * @param amountFrom Minimum amount to filter recipients by amount range.  Allows filtering results by the specified &#x60;amount&#x60; range. When using this filter, the &#x60;currency&#x60; should also be specified.  Example: &#x60;/v1/recipients?currency&#x3D;NGN&amp;amount_from&#x3D;83.76672339&amp;amount_to&#x3D;83.76672339&#x60; (optional)
     * @param amountTo Max amount to filter recipients by amount range.  Allows filtering results by the specified &#x60;amount&#x60; range. When using this filter, the &#x60;currency&#x60; should also be specified.  Example: &#x60;/v1/recipients?currency&#x3D;NGN&amp;amount_from&#x3D;83.76672339&amp;amount_to&#x3D;83.76672339&#x60; (optional)
     * @param state Allows filtering results by &#x60;state&#x60; of recipient. See [API Documentation - Recipient state](https://github.com/transferzero/api-documentation/blob/master/transaction-flow.md#state-1) for possible states.  Example: &#x60;/v1/recipients?state[]&#x3D;error&amp;state[]&#x3D;initial&#x60; (optional)
     * @param currency Allows filtering results by &#x60;input_currency&#x60;.  Additionally required when filtering by an amount range Example: &#x60;/v1/recipients?currency[]&#x3D;KES&amp;currency[]&#x3D;NGN&#x60; (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public okhttp3.Call getRecipientsCall(Integer page, Integer per, String createdAtFrom, String createdAtTo, String amountFrom, String amountTo, List<String> state, List<String> currency, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = new Object();

        // create path and map variables
        String localVarPath = "/recipients";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (page != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("page", page));
        }

        if (per != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("per", per));
        }

        if (createdAtFrom != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("created_at_from", createdAtFrom));
        }

        if (createdAtTo != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("created_at_to", createdAtTo));
        }

        if (amountFrom != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("amount_from", amountFrom));
        }

        if (amountTo != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("amount_to", amountTo));
        }

        if (state != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "state", state));
        }

        if (currency != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "currency", currency));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "AuthorizationKey", "AuthorizationNonce", "AuthorizationSecret", "AuthorizationSignature" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getRecipientsValidateBeforeCall(Integer page, Integer per, String createdAtFrom, String createdAtTo, String amountFrom, String amountTo, List<String> state, List<String> currency, final ApiCallback _callback) throws ApiException {
        

        okhttp3.Call localVarCall = getRecipientsCall(page, per, createdAtFrom, createdAtTo, amountFrom, amountTo, state, currency, _callback);
        return localVarCall;

    }

    /**
     * Getting a list of recipients with filtering
     * Fetches details of all recipients.
     * @param page The page number to request (defaults to 1) (optional)
     * @param per The number of results to load per page (defaults to 10) (optional)
     * @param createdAtFrom Start date to filter recipients by created_at range Allows filtering results by the specified &#x60;created_at&#x60; timeframe.  Example: &#x60;/v1/recipients?created_at_from&#x3D;2018-06-06&amp;created_at_to&#x3D;2018-06-08&#x60; (optional)
     * @param createdAtTo End date to filter recipients by created_at range Allows filtering results by the specified &#x60;created_at&#x60; timeframe.  Example: &#x60;/v1/recipients?created_at_from&#x3D;2018-06-06&amp;created_at_to&#x3D;2018-06-08&#x60; (optional)
     * @param amountFrom Minimum amount to filter recipients by amount range.  Allows filtering results by the specified &#x60;amount&#x60; range. When using this filter, the &#x60;currency&#x60; should also be specified.  Example: &#x60;/v1/recipients?currency&#x3D;NGN&amp;amount_from&#x3D;83.76672339&amp;amount_to&#x3D;83.76672339&#x60; (optional)
     * @param amountTo Max amount to filter recipients by amount range.  Allows filtering results by the specified &#x60;amount&#x60; range. When using this filter, the &#x60;currency&#x60; should also be specified.  Example: &#x60;/v1/recipients?currency&#x3D;NGN&amp;amount_from&#x3D;83.76672339&amp;amount_to&#x3D;83.76672339&#x60; (optional)
     * @param state Allows filtering results by &#x60;state&#x60; of recipient. See [API Documentation - Recipient state](https://github.com/transferzero/api-documentation/blob/master/transaction-flow.md#state-1) for possible states.  Example: &#x60;/v1/recipients?state[]&#x3D;error&amp;state[]&#x3D;initial&#x60; (optional)
     * @param currency Allows filtering results by &#x60;input_currency&#x60;.  Additionally required when filtering by an amount range Example: &#x60;/v1/recipients?currency[]&#x3D;KES&amp;currency[]&#x3D;NGN&#x60; (optional)
     * @return RecipientListResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public RecipientListResponse getRecipients(Integer page, Integer per, String createdAtFrom, String createdAtTo, String amountFrom, String amountTo, List<String> state, List<String> currency) throws ApiException {
        ApiResponse<RecipientListResponse> localVarResp = getRecipientsWithHttpInfo(page, per, createdAtFrom, createdAtTo, amountFrom, amountTo, state, currency);
        return localVarResp.getData();
    }

    /**
     * Getting a list of recipients with filtering
     * Fetches details of all recipients.
     * @param page The page number to request (defaults to 1) (optional)
     * @param per The number of results to load per page (defaults to 10) (optional)
     * @param createdAtFrom Start date to filter recipients by created_at range Allows filtering results by the specified &#x60;created_at&#x60; timeframe.  Example: &#x60;/v1/recipients?created_at_from&#x3D;2018-06-06&amp;created_at_to&#x3D;2018-06-08&#x60; (optional)
     * @param createdAtTo End date to filter recipients by created_at range Allows filtering results by the specified &#x60;created_at&#x60; timeframe.  Example: &#x60;/v1/recipients?created_at_from&#x3D;2018-06-06&amp;created_at_to&#x3D;2018-06-08&#x60; (optional)
     * @param amountFrom Minimum amount to filter recipients by amount range.  Allows filtering results by the specified &#x60;amount&#x60; range. When using this filter, the &#x60;currency&#x60; should also be specified.  Example: &#x60;/v1/recipients?currency&#x3D;NGN&amp;amount_from&#x3D;83.76672339&amp;amount_to&#x3D;83.76672339&#x60; (optional)
     * @param amountTo Max amount to filter recipients by amount range.  Allows filtering results by the specified &#x60;amount&#x60; range. When using this filter, the &#x60;currency&#x60; should also be specified.  Example: &#x60;/v1/recipients?currency&#x3D;NGN&amp;amount_from&#x3D;83.76672339&amp;amount_to&#x3D;83.76672339&#x60; (optional)
     * @param state Allows filtering results by &#x60;state&#x60; of recipient. See [API Documentation - Recipient state](https://github.com/transferzero/api-documentation/blob/master/transaction-flow.md#state-1) for possible states.  Example: &#x60;/v1/recipients?state[]&#x3D;error&amp;state[]&#x3D;initial&#x60; (optional)
     * @param currency Allows filtering results by &#x60;input_currency&#x60;.  Additionally required when filtering by an amount range Example: &#x60;/v1/recipients?currency[]&#x3D;KES&amp;currency[]&#x3D;NGN&#x60; (optional)
     * @return ApiResponse&lt;RecipientListResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<RecipientListResponse> getRecipientsWithHttpInfo(Integer page, Integer per, String createdAtFrom, String createdAtTo, String amountFrom, String amountTo, List<String> state, List<String> currency) throws ApiException {
        okhttp3.Call localVarCall = getRecipientsValidateBeforeCall(page, per, createdAtFrom, createdAtTo, amountFrom, amountTo, state, currency, null);
        Type localVarReturnType = new TypeToken<RecipientListResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Getting a list of recipients with filtering (asynchronously)
     * Fetches details of all recipients.
     * @param page The page number to request (defaults to 1) (optional)
     * @param per The number of results to load per page (defaults to 10) (optional)
     * @param createdAtFrom Start date to filter recipients by created_at range Allows filtering results by the specified &#x60;created_at&#x60; timeframe.  Example: &#x60;/v1/recipients?created_at_from&#x3D;2018-06-06&amp;created_at_to&#x3D;2018-06-08&#x60; (optional)
     * @param createdAtTo End date to filter recipients by created_at range Allows filtering results by the specified &#x60;created_at&#x60; timeframe.  Example: &#x60;/v1/recipients?created_at_from&#x3D;2018-06-06&amp;created_at_to&#x3D;2018-06-08&#x60; (optional)
     * @param amountFrom Minimum amount to filter recipients by amount range.  Allows filtering results by the specified &#x60;amount&#x60; range. When using this filter, the &#x60;currency&#x60; should also be specified.  Example: &#x60;/v1/recipients?currency&#x3D;NGN&amp;amount_from&#x3D;83.76672339&amp;amount_to&#x3D;83.76672339&#x60; (optional)
     * @param amountTo Max amount to filter recipients by amount range.  Allows filtering results by the specified &#x60;amount&#x60; range. When using this filter, the &#x60;currency&#x60; should also be specified.  Example: &#x60;/v1/recipients?currency&#x3D;NGN&amp;amount_from&#x3D;83.76672339&amp;amount_to&#x3D;83.76672339&#x60; (optional)
     * @param state Allows filtering results by &#x60;state&#x60; of recipient. See [API Documentation - Recipient state](https://github.com/transferzero/api-documentation/blob/master/transaction-flow.md#state-1) for possible states.  Example: &#x60;/v1/recipients?state[]&#x3D;error&amp;state[]&#x3D;initial&#x60; (optional)
     * @param currency Allows filtering results by &#x60;input_currency&#x60;.  Additionally required when filtering by an amount range Example: &#x60;/v1/recipients?currency[]&#x3D;KES&amp;currency[]&#x3D;NGN&#x60; (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public okhttp3.Call getRecipientsAsync(Integer page, Integer per, String createdAtFrom, String createdAtTo, String amountFrom, String amountTo, List<String> state, List<String> currency, final ApiCallback<RecipientListResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = getRecipientsValidateBeforeCall(page, per, createdAtFrom, createdAtTo, amountFrom, amountTo, state, currency, _callback);
        Type localVarReturnType = new TypeToken<RecipientListResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for patchRecipient
     * @param recipientID ID of recipient to update.  Example: &#x60;/v1/recipients/9d4d7b73-a94c-4979-ab57-09074fd55d33&#x60; (required)
     * @param recipientRequest  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public okhttp3.Call patchRecipientCall(UUID recipientID, RecipientRequest recipientRequest, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = recipientRequest;

        // create path and map variables
        String localVarPath = "/recipients/{Recipient ID}"
            .replaceAll("\\{" + "Recipient ID" + "\\}", localVarApiClient.escapeString(recipientID.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "AuthorizationKey", "AuthorizationNonce", "AuthorizationSecret", "AuthorizationSignature" };
        return localVarApiClient.buildCall(localVarPath, "PATCH", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call patchRecipientValidateBeforeCall(UUID recipientID, RecipientRequest recipientRequest, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'recipientID' is set
        if (recipientID == null) {
            throw new ApiException("Missing the required parameter 'recipientID' when calling patchRecipient(Async)");
        }
        
        // verify the required parameter 'recipientRequest' is set
        if (recipientRequest == null) {
            throw new ApiException("Missing the required parameter 'recipientRequest' when calling patchRecipient(Async)");
        }
        

        okhttp3.Call localVarCall = patchRecipientCall(recipientID, recipientRequest, _callback);
        return localVarCall;

    }

    /**
     * Updating a recipient
     * Updates the recipient specified in the URL path.  Please note that only recipients where the &#x60;editable&#x60; field is true can be modified. Once the recipient is modified any subsequent payout tries will be sent to the updated details.
     * @param recipientID ID of recipient to update.  Example: &#x60;/v1/recipients/9d4d7b73-a94c-4979-ab57-09074fd55d33&#x60; (required)
     * @param recipientRequest  (required)
     * @return RecipientResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public RecipientResponse patchRecipient(UUID recipientID, RecipientRequest recipientRequest) throws ApiException {
        ApiResponse<RecipientResponse> localVarResp = patchRecipientWithHttpInfo(recipientID, recipientRequest);
        return localVarResp.getData();
    }

    /**
     * Updating a recipient
     * Updates the recipient specified in the URL path.  Please note that only recipients where the &#x60;editable&#x60; field is true can be modified. Once the recipient is modified any subsequent payout tries will be sent to the updated details.
     * @param recipientID ID of recipient to update.  Example: &#x60;/v1/recipients/9d4d7b73-a94c-4979-ab57-09074fd55d33&#x60; (required)
     * @param recipientRequest  (required)
     * @return ApiResponse&lt;RecipientResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<RecipientResponse> patchRecipientWithHttpInfo(UUID recipientID, RecipientRequest recipientRequest) throws ApiException {
        okhttp3.Call localVarCall = patchRecipientValidateBeforeCall(recipientID, recipientRequest, null);
        Type localVarReturnType = new TypeToken<RecipientResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Updating a recipient (asynchronously)
     * Updates the recipient specified in the URL path.  Please note that only recipients where the &#x60;editable&#x60; field is true can be modified. Once the recipient is modified any subsequent payout tries will be sent to the updated details.
     * @param recipientID ID of recipient to update.  Example: &#x60;/v1/recipients/9d4d7b73-a94c-4979-ab57-09074fd55d33&#x60; (required)
     * @param recipientRequest  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public okhttp3.Call patchRecipientAsync(UUID recipientID, RecipientRequest recipientRequest, final ApiCallback<RecipientResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = patchRecipientValidateBeforeCall(recipientID, recipientRequest, _callback);
        Type localVarReturnType = new TypeToken<RecipientResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
