/*
 * BitPesa Private API
 * API specification used for internal BitPesa endpoints
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.transferzero.sdk.api;

import com.transferzero.sdk.ApiException;
import com.transferzero.sdk.model.DocumentListResponse;
import com.transferzero.sdk.model.DocumentResponse;
import java.util.UUID;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SenderDocumentsApi
 */
@Ignore
public class SenderDocumentsApiTest {

    private final SenderDocumentsApi api = new SenderDocumentsApi();

    
    /**
     * Adding a document to a sender
     *
     * Adds a new document to a sender 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addDocumentSenderTest() throws ApiException {
        UUID senderID = null;
        UUID documentID = null;
        DocumentResponse response = api.addDocumentSender(senderID, documentID);

        // TODO: test validations
    }
    
    /**
     * Fetching a document belonging to a sender
     *
     * Returns a single document belonging to a sender by the Document ID
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getSenderDocumentTest() throws ApiException {
        UUID senderID = null;
        UUID documentID = null;
        DocumentResponse response = api.getSenderDocument(senderID, documentID)
                .execute();

        // TODO: test validations
    }
    
    /**
     * Getting a list of documents belonging to a sender
     *
     * Fetches a list of documents belonging to a sender.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getSenderDocumentsTest() throws ApiException {
        UUID senderID = null;
        Integer page = null;
        Integer per = null;
        DocumentListResponse response = api.getSenderDocuments(senderID)
                .page(page)
                .per(per)
                .execute();

        // TODO: test validations
    }
    
    /**
     * Removing a document from a sender
     *
     * Removes a document from a sender 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void removeDocumentSenderTest() throws ApiException {
        UUID senderID = null;
        UUID documentID = null;
        DocumentResponse response = api.removeDocumentSender(senderID, documentID);

        // TODO: test validations
    }
    
}
